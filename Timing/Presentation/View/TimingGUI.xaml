<Window x:Class="SecondMonitor.Timing.Presentation.View.TimingGui" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:dmBasicProperties="clr-namespace:SecondMonitor.DataModel.BasicProperties;assembly=DataModel" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:model="clr-namespace:SecondMonitor.Timing.Settings.Model" xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:temperatureControl="clr-namespace:SecondMonitor.WindowsControls.WPF.TemperatureControl;assembly=WindowsControls" xmlns:view="clr-namespace:SecondMonitor.Timing.Presentation.View" xmlns:viewModel="clr-namespace:SecondMonitor.Timing.Presentation.ViewModel" xmlns:viewModel1="clr-namespace:SecondMonitor.Timing.SessionTiming.Drivers.Presentation.ViewModel"
        xmlns:wpf="clr-namespace:SecondMonitor.WindowsControls.WPF;assembly=WindowsControls"
        xmlns:wheelStatusControl="clr-namespace:SecondMonitor.WindowsControls.WPF.WheelStatusControl;assembly=WindowsControls"
        xmlns:fuelControl="clr-namespace:SecondMonitor.WindowsControls.WPF.FuelControl;assembly=WindowsControls"
        xmlns:pedalControl="clr-namespace:SecondMonitor.WindowsControls.WPF.PedalControl;assembly=WindowsControls"
        x:Name="MainWindow"
        Title="{Binding Title}"
        Width="1600" Height="800"
        d:DataContext="{d:DesignInstance Type=viewModel:TimingDataViewModel}"
        d:DesignHeight="300" d:DesignWidth="300" WindowState="Maximized" WindowStyle="ThreeDBorderWindow"
        mc:Ignorable="d">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/WindowsControls;component/WPF/CommonResources.xaml" />
                <ResourceDictionary Source="pack://application:,,,/WindowsControls;component/WPF/FuelControl/FuelOverviewControl.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/WindowsControls;component/WPF/TemperatureControl/TemperatureControlT.xaml" />
                <ResourceDictionary Source="pack://application:,,,/WindowsControls;component/WPF/PedalControl/PedalGearControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/WindowsControls;component/WPF/WheelStatusControl/WheelStatucControlT.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <ObjectDataProvider x:Key="DataFromTemperatureEnum" MethodName="GetValues"
                                ObjectType="{x:Type system:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="dmBasicProperties:TemperatureUnits" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider x:Key="DataFromPressureEnum" MethodName="GetValues"
                                ObjectType="{x:Type system:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="dmBasicProperties:PressureUnits" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider x:Key="DataFromVolumeEnum" MethodName="GetValues"
                                ObjectType="{x:Type system:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="dmBasicProperties:VolumeUnits" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider x:Key="DataFromFuelEnum" MethodName="GetValues"
                                ObjectType="{x:Type system:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="dmBasicProperties:FuelCalculationScope" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
            <ObjectDataProvider x:Key="DataFromDisplayModeEnum" MethodName="GetValues"
                                ObjectType="{x:Type system:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="model:DisplayModeEnum" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>
    </Window.Resources>
    <Grid x:Name="MainGrid" Margin="0,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
          Background="Black">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid x:Name="SessionInfo" Grid.Row="0" VerticalAlignment="Top" Background="Black">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0">
                <Label x:Name="LblTrack" HorizontalAlignment="Left" VerticalAlignment="Top" Content="Track Info"
                       FontSize="20" Foreground="{StaticResource LightGrey01Brush}" />
                <Label x:Name="LblWeather" Margin="0,37,0,0" HorizontalAlignment="Left" VerticalAlignment="Top"
                       Content="Weather Info" FontSize="20" Foreground="{StaticResource LightGrey01Brush}" />
            </StackPanel>
            <StackPanel Grid.Column="1">
                <wpf:TimeSpanBarControl Title="Δ to Personal Best" Value="{Binding Path=SessionTiming.CombinedLapPortionComparators.PlayerLapToBestPlayerComparator.TimeDifference}" />
                <wpf:TimeSpanBarControl Title="Δ to Previous Lap" Value="{Binding Path=SessionTiming.CombinedLapPortionComparators.PlayerLapToPreviousComparator.TimeDifference}" />
            </StackPanel>
            <view:SessionInfoView Grid.Column="2" Height="127" Margin="0,10,10,0" HorizontalAlignment="Right"
                                  VerticalAlignment="Top"
                                  DataContext="{Binding SessionInfoViewModel}" />
        </Grid>
        <Grid x:Name="SessionTiming" Grid.Row="1" VerticalAlignment="Top" Background="Black">
            <Border BorderThickness="3">
                <DataGrid x:Name="DtTimig" HorizontalAlignment="Stretch"
                          AutoGenerateColumns="False" Background="Black" CanUserReorderColumns="False" CanUserSortColumns="False"
                          EnableColumnVirtualization="False" EnableRowVirtualization="False" FontSize="18" Foreground="{StaticResource LightGrey01Brush}"
                          HeadersVisibility="Column" IsReadOnly="True"
                          ItemsSource="{Binding TimingInfo}"
                          SelectionMode="Single" SelectionUnit="FullRow">
                    <DataGrid.InputBindings>
                        <MouseBinding Command="{Binding DataContext.RightClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Gesture="RightClick" />
                        <MouseBinding Command="{Binding DataContext.DoubleLeftClickCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" Gesture="LeftDoubleClick" />
                    </DataGrid.InputBindings>
                    <DataGrid.Resources>
                        <view:BindingProxy x:Key="proxy" Data="{Binding Path=DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />
                        <view:DoubleToDataGridLengthValueConverter x:Key="lengthConverter" />
                        <BooleanToVisibilityConverter x:Key="BoolToVis" />
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="FontWeight" Value="Bold" />
                            <Setter Property="Foreground" Value="{StaticResource LightGrey01Brush}" />
                            <Setter Property="Background" Value="Blue" />
                            <Setter Property="BorderBrush" Value="{StaticResource LightGrey01Brush}" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                        <Style x:Key="TextBoxStyle" TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLastLapBestLap}" Value="True">
                                    <Setter Property="Background" Value="Green" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsLastLapBestSessionLap}" Value="True">
                                    <Setter Property="Background" Value="Purple" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                        <Style x:Key="TextBoxStyleSector1" TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLastSector1PersonalBest}" Value="True">
                                    <Setter Property="Background" Value="Green" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsLastSector1SessionBest}" Value="True">
                                    <Setter Property="Background" Value="Purple" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                        <Style x:Key="TextBoxStyleSector2" TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLastSector2PersonalBest}" Value="True">
                                    <Setter Property="Background" Value="Green" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsLastSector2SessionBest}" Value="True">
                                    <Setter Property="Background" Value="Purple" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                        <Style x:Key="TextBoxStyleSector3" TargetType="TextBlock">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsLastSector3PersonalBest}" Value="True">
                                    <Setter Property="Background" Value="Green" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsLastSector3SessionBest}" Value="True">
                                    <Setter Property="Background" Value="Purple" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Style.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                                <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />
                            </Style.Resources>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Width="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Position.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                            Binding="{Binding Position, Mode=OneWay}"
                                            ElementStyle="{StaticResource TextBoxStyle}"
                                            Header="#"
                                            Visibility="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Position.Visible, Mode=TwoWay, Converter={StaticResource BoolToVis}}" />
                        <DataGridTextColumn Width="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Name.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                            Binding="{Binding Name, Mode=OneTime}"
                                            ElementStyle="{StaticResource TextBoxStyle}"
                                            Header="Name"
                                            Visibility="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Name.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}" />
                        <DataGridTextColumn Width="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.CarName.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                            Binding="{Binding CarName, Mode=OneTime}"
                                            ElementStyle="{StaticResource TextBoxStyle}"
                                            Header="Car"
                                            Visibility="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.CarName.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}" />
                        <DataGridTextColumn Width="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.CompletedLaps.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                            Binding="{Binding CompletedLaps, Mode=OneWay}"
                                            ElementStyle="{StaticResource TextBoxStyle}"
                                            Header="Laps"
                                            Visibility="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.CompletedLaps.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}" />
                        <DataGridTextColumn Width="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.LastLapTime.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                            Binding="{Binding LastLapTime, Mode=OneWay}"
                                            ElementStyle="{StaticResource TextBoxStyle}"
                                            Header="Last Lap"
                                            Visibility="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.LastLapTime.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}" />
                        <DataGridTextColumn Width="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Sector1.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                            Binding="{Binding Sector1, Mode=OneWay}"
                                            ElementStyle="{StaticResource TextBoxStyleSector1}"
                                            Header="S1"
                                            Visibility="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Sector1.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}" />
                        <DataGridTextColumn Width="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Sector2.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                            Binding="{Binding Sector2, Mode=OneWay}"
                                            ElementStyle="{StaticResource TextBoxStyleSector2}"
                                            Header="S2"
                                            Visibility="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Sector2.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}" />
                        <DataGridTextColumn Width="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Sector3.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                            Binding="{Binding Sector3, Mode=OneWay}"
                                            ElementStyle="{StaticResource TextBoxStyleSector3}"
                                            Header="S3"
                                            Visibility="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Sector3.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}" />
                        <DataGridTextColumn Width="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Pace.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                            Binding="{Binding Pace, Mode=OneWay}"
                                            ElementStyle="{StaticResource TextBoxStyle}"
                                            Header="Pace"
                                            Visibility="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.Pace.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}" />
                        <DataGridTextColumn Width="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.BestLap.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                            Binding="{Binding BestLap, Mode=OneWay}"
                                            ElementStyle="{StaticResource TextBoxStyle}"
                                            Header="Best Lap"
                                            Visibility="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.BestLap.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}" />
                        <DataGridTextColumn Width="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.CurrentLapProgressTime.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                            Binding="{Binding CurrentLapProgressTime, Mode=OneWay}"
                                            ElementStyle="{StaticResource TextBoxStyle}"
                                            Header="Current Lap"
                                            Visibility="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.CurrentLapProgressTime.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}" />
                        <DataGridTextColumn Width="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.LastPitInfo.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                            Binding="{Binding LastPitInfo, Mode=OneWay}"
                                            ElementStyle="{StaticResource TextBoxStyle}"
                                            Header="Pits"
                                            Visibility="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.LastPitInfo.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}" />
                        <DataGridTextColumn Width="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.TimeToPlayer.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                            Binding="{Binding TimeToPlayer, Mode=OneWay}"
                                            ElementStyle="{StaticResource TextBoxStyle}"
                                            Header="Gap"
                                            Visibility="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.TimeToPlayer.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}" />
                        <DataGridTextColumn Width="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.TopSpeed.Width, Mode=TwoWay, Converter={StaticResource lengthConverter}}"
                                            Binding="{Binding TopSpeed, Mode=OneWay}"
                                            ElementStyle="{StaticResource TextBoxStyle}"
                                            Header="Top Speed"
                                            Visibility="{Binding Source={StaticResource proxy}, Path=Data.CurrentSessionOptions.ColumnsSettings.TopSpeed.Visible, Mode=OneWay, Converter={StaticResource BoolToVis}}" />
                    </DataGrid.Columns>

                    <DataGrid.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True" />
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.ItemContainerStyle>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Setter Property="Background" Value="Black" />
                            <Setter Property="BorderBrush" Value="Gray" />
                            <Setter Property="BorderThickness" Value="0.5" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="Black" />
                                </Trigger>
                                <DataTrigger Binding="{Binding IsPlayer, Mode=OneWay}" Value="True">
                                    <Setter Property="Background" Value="Gray" />
                                    <Setter Property="Foreground" Value="{StaticResource LightGrey01Brush}" />
                                    <Setter Property="FontSize" Value="21" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsLapped, Mode=OneWay}" Value="True">
                                    <Setter Property="Foreground" Value="LightBlue" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsLapping, Mode=OneWay}" Value="True">
                                    <Setter Property="Foreground" Value="Red" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding InPits, Mode=OneWay}" Value="True">
                                    <Setter Property="Background" Value="Olive" />
                                    <Setter Property="Foreground" Value="Black" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.ItemContainerStyle>

                </DataGrid>
            </Border>
        </Grid>
        <Grid Background="Black" Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Grid Column="0">
                <Border BorderBrush="{StaticResource LightGrey01Brush}" BorderThickness="2" CornerRadius="5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid Column="0" MinWidth="400">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border BorderBrush="{StaticResource LightGrey01Brush}" BorderThickness="2" CornerRadius="5">
                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition  Width="*"/>
                                        <ColumnDefinition  Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition  Height="*"/>
                                        <RowDefinition  Height="*"/>
                                    </Grid.RowDefinitions>
                                    <wheelStatusControl:WheelStatusControl Grid.Column="0" Grid.Row="0"
                                    TyreCondition="{Binding CarStatusViewModel.PlayersWheelsViewModel.LeftFrontTyre.TyreCondition, Mode=OneWay}" Height="96"
                                    TyreCoreTemperature="{Binding CarStatusViewModel.PlayersWheelsViewModel.LeftFrontTyre.TyreCoreTemperature, Mode=OneWay}"
                                    TyreSlippingIndication="{Binding CarStatusViewModel.PlayersWheelsViewModel.LeftFrontTyre.TyreSlippingIndication, Mode=OneWay}"
                                    BrakeTemperature="{Binding CarStatusViewModel.PlayersWheelsViewModel.LeftFrontTyre.BrakeTemperature, Mode=OneWay}"
                                    TemperatureUnits="{Binding  DisplaySettings.TemperatureUnits, Mode=OneWay}"
                                    TyreLeftTemperature="{Binding CarStatusViewModel.PlayersWheelsViewModel.LeftFrontTyre.TyreLeftTemperature, Mode=OneWay}"
                                    TyreCenterTemperature="{Binding CarStatusViewModel.PlayersWheelsViewModel.LeftFrontTyre.TyreCenterTemperature, Mode=OneWay}"
                                    TyreRightTemperature="{Binding CarStatusViewModel.PlayersWheelsViewModel.LeftFrontTyre.TyreRightTemperature, Mode=OneWay}"
                                    TyrePressure="{Binding CarStatusViewModel.PlayersWheelsViewModel.LeftFrontTyre.TyrePressure, Mode=OneWay}"
                                    PressureUnits="{Binding DisplaySettings.PressureUnits, Mode=OneWay}"
                                                                       IsLeftWheel="{Binding CarStatusViewModel.PlayersWheelsViewModel.LeftFrontTyre.IsLeftWheel, Mode=OneWay}">
                                    </wheelStatusControl:WheelStatusControl>
                                    <wheelStatusControl:WheelStatusControl Grid.Column="1" Grid.Row="0"
                                                                       TyreCondition="{Binding CarStatusViewModel.PlayersWheelsViewModel.RightFrontTyre.TyreCondition, Mode=OneWay}" Height="96"
                                                                       TyreCoreTemperature="{Binding CarStatusViewModel.PlayersWheelsViewModel.RightFrontTyre.TyreCoreTemperature, Mode=OneWay}"
                                                                       TyreSlippingIndication="{Binding CarStatusViewModel.PlayersWheelsViewModel.RightFrontTyre.TyreSlippingIndication, Mode=OneWay}"
                                                                       BrakeTemperature="{Binding CarStatusViewModel.PlayersWheelsViewModel.RightFrontTyre.BrakeTemperature, Mode=OneWay}"
                                                                       TemperatureUnits="{Binding  DisplaySettings.TemperatureUnits, Mode=OneWay}"
                                                                       TyreLeftTemperature="{Binding CarStatusViewModel.PlayersWheelsViewModel.RightFrontTyre.TyreLeftTemperature, Mode=OneWay}"
                                                                       TyreCenterTemperature="{Binding CarStatusViewModel.PlayersWheelsViewModel.RightFrontTyre.TyreCenterTemperature, Mode=OneWay}"
                                                                       TyreRightTemperature="{Binding CarStatusViewModel.PlayersWheelsViewModel.RightFrontTyre.TyreRightTemperature, Mode=OneWay}"
                                                                       TyrePressure="{Binding CarStatusViewModel.PlayersWheelsViewModel.RightFrontTyre.TyrePressure, Mode=OneWay}"
                                                                       PressureUnits="{Binding DisplaySettings.PressureUnits, Mode=OneWay}"
                                                                       IsLeftWheel="{Binding CarStatusViewModel.PlayersWheelsViewModel.RightFrontTyre.IsLeftWheel, Mode=OneWay}">
                                    </wheelStatusControl:WheelStatusControl>
                                    <wheelStatusControl:WheelStatusControl Grid.Column="0" Grid.Row="1"
                                    TyreCondition="{Binding CarStatusViewModel.PlayersWheelsViewModel.LeftRearTyre.TyreCondition, Mode=OneWay}" Height="96"
                                    TyreCoreTemperature="{Binding CarStatusViewModel.PlayersWheelsViewModel.LeftRearTyre.TyreCoreTemperature, Mode=OneWay}"
                                    TyreSlippingIndication="{Binding CarStatusViewModel.PlayersWheelsViewModel.LeftRearTyre.TyreSlippingIndication, Mode=OneWay}"
                                    BrakeTemperature="{Binding CarStatusViewModel.PlayersWheelsViewModel.LeftRearTyre.BrakeTemperature, Mode=OneWay}"
                                    TemperatureUnits="{Binding  DisplaySettings.TemperatureUnits, Mode=OneWay}"
                                    TyreLeftTemperature="{Binding CarStatusViewModel.PlayersWheelsViewModel.LeftRearTyre.TyreLeftTemperature, Mode=OneWay}"
                                    TyreCenterTemperature="{Binding CarStatusViewModel.PlayersWheelsViewModel.LeftRearTyre.TyreCenterTemperature, Mode=OneWay}"
                                    TyreRightTemperature="{Binding CarStatusViewModel.PlayersWheelsViewModel.LeftRearTyre.TyreRightTemperature, Mode=OneWay}"
                                    TyrePressure="{Binding CarStatusViewModel.PlayersWheelsViewModel.LeftRearTyre.TyrePressure, Mode=OneWay}"
                                    PressureUnits="{Binding DisplaySettings.PressureUnits, Mode=OneWay}"
                                                                       IsLeftWheel="{Binding CarStatusViewModel.PlayersWheelsViewModel.LeftRearTyre.IsLeftWheel, Mode=OneWay}">
                                    </wheelStatusControl:WheelStatusControl>
                                    <wheelStatusControl:WheelStatusControl Grid.Column="1" Grid.Row="1"
                                                                       TyreCondition="{Binding CarStatusViewModel.PlayersWheelsViewModel.RightRearTyre.TyreCondition, Mode=OneWay}" Height="96"
                                                                       TyreCoreTemperature="{Binding CarStatusViewModel.PlayersWheelsViewModel.RightRearTyre.TyreCoreTemperature, Mode=OneWay}"
                                                                       TyreSlippingIndication="{Binding CarStatusViewModel.PlayersWheelsViewModel.RightRearTyre.TyreSlippingIndication, Mode=OneWay}"
                                                                       BrakeTemperature="{Binding CarStatusViewModel.PlayersWheelsViewModel.RightRearTyre.BrakeTemperature, Mode=OneWay}"
                                                                       TemperatureUnits="{Binding  DisplaySettings.TemperatureUnits, Mode=OneWay}"
                                                                       TyreLeftTemperature="{Binding CarStatusViewModel.PlayersWheelsViewModel.RightRearTyre.TyreLeftTemperature, Mode=OneWay}"
                                                                       TyreCenterTemperature="{Binding CarStatusViewModel.PlayersWheelsViewModel.RightRearTyre.TyreCenterTemperature, Mode=OneWay}"
                                                                       TyreRightTemperature="{Binding CarStatusViewModel.PlayersWheelsViewModel.RightRearTyre.TyreRightTemperature, Mode=OneWay}"
                                                                       TyrePressure="{Binding CarStatusViewModel.PlayersWheelsViewModel.RightRearTyre.TyrePressure, Mode=OneWay}"
                                                                       PressureUnits="{Binding DisplaySettings.PressureUnits, Mode=OneWay}"
                                                                       IsLeftWheel="{Binding CarStatusViewModel.PlayersWheelsViewModel.RightRearTyre.IsLeftWheel, Mode=OneWay}">
                                    </wheelStatusControl:WheelStatusControl>
                                </Grid>
                            </Border>
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Border Grid.Column="0" BorderBrush="{StaticResource Anthracite01Brush}" BorderThickness="5" CornerRadius="5">
                                    <pedalControl:PedalGearControl ThrottlePercentage="{Binding Path=CarStatusViewModel.PedalsAndGearViewModel.ThrottlePercentage}"
                                                                   BrakePercentage="{Binding Path=CarStatusViewModel.PedalsAndGearViewModel.BrakePercentage}"
                                                                   ClutchPercentage="{Binding Path=CarStatusViewModel.PedalsAndGearViewModel.ClutchPercentage}"
                                                                   Gear="{Binding Path=CarStatusViewModel.PedalsAndGearViewModel.Gear}"/>
                                </Border>
                                <Border Grid.Column="1" BorderBrush="{StaticResource Anthracite01Brush}" BorderThickness="5" CornerRadius="5">
                                    <fuelControl:FuelOverviewControl Margin="5,5,5,5"
                                                                     VolumeUnits="{Binding DisplaySettings.VolumeUnits}"
                                                                     FuelStatusColor="{StaticResource LightGrey01Brush}"
                                                                     FuelStatusUnknownColor="{StaticResource LightGrey01Color}"
                                                                     FuelStatusOkColor="{StaticResource Green01Color}"
                                                                     FuelStatusMightBeColor="{StaticResource Orange01Color}"
                                                                     FuelStatusNotEnoughColor="{StaticResource HighQuantityColor}"
                                                                     BlinkToColor="{StaticResource Anthracite01Color}"
                                                                     MaximumFuel="{Binding CarStatusViewModel.FuelOverviewViewModel.MaximumFuel}"
                                                                     FuelPercentage="{Binding CarStatusViewModel.FuelOverviewViewModel.FuelPercentage}"
                                                                     CurPerLap="{Binding CarStatusViewModel.FuelOverviewViewModel.CurrentPerLap}"
                                                                     CurPerMinute="{Binding CarStatusViewModel.FuelOverviewViewModel.CurrentPerMinute}"
                                                                     AvgPerLap="{Binding CarStatusViewModel.FuelOverviewViewModel.AvgPerLap}"
                                                                     AvgPerMinute="{Binding CarStatusViewModel.FuelOverviewViewModel.AvgPerMinute}"
                                                                     LapsLeft="{Binding CarStatusViewModel.FuelOverviewViewModel.LapsLeft}"
                                                                     TimeLeft="{Binding CarStatusViewModel.FuelOverviewViewModel.TimeLeft}"
                                                                     FuelState="{Binding CarStatusViewModel.FuelOverviewViewModel.FuelState}"
                                                                     ResetCommand="{Binding CarStatusViewModel.FuelOverviewViewModel.ResetCommand}"/>
                                </Border>
                            </Grid>
                        </Grid>
                        <Border Grid.Column="1" BorderBrush="{StaticResource LightGrey01Brush}" BorderThickness="2" CornerRadius="5">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <temperatureControl:TemperatureControl Width="200" Height="150"
                                                                   MaximalNormalTemperature="{Binding CarStatusViewModel.WaterTemperatureViewModel.MaximumNormalTemperature, Mode=OneWay}"
                                                                   MaximalTemperature="{Binding CarStatusViewModel.WaterTemperatureViewModel.MaximumTemperature, Mode=OneWay}"
                                                                   MinimalTemperature="{Binding CarStatusViewModel.WaterTemperatureViewModel.MinimalTemperature, Mode=OneWay}"
                                                                   Temperature="{Binding CarStatusViewModel.WaterTemperatureViewModel.Temperature, Mode=OneWay}"
                                                                   TemperatureUnits="{Binding DisplaySettings.TemperatureUnits, Mode=OneWay}"
                                                                   Icon="{StaticResource WaterTemperatureIcon}"/>
                            <temperatureControl:TemperatureControl Width="200" Height="150" Grid.Row="1"
                            MaximalNormalTemperature="{Binding CarStatusViewModel.OilTemperatureViewModel.MaximumNormalTemperature, Mode=OneWay}"
                            MaximalTemperature="{Binding CarStatusViewModel.OilTemperatureViewModel.MaximumTemperature, Mode=OneWay}"
                            MinimalTemperature="{Binding CarStatusViewModel.OilTemperatureViewModel.MinimalTemperature, Mode=OneWay}"
                            Temperature="{Binding CarStatusViewModel.OilTemperatureViewModel.Temperature, Mode=OneWay}"
                            TemperatureUnits="{Binding DisplaySettings.TemperatureUnits, Mode=OneWay}"
                            Icon="{StaticResource OilIcon}"/>
                            </Grid>
                            </Border>
                    </Grid>
                </Border>
            </Grid>

            <Grid Column="1">
                <Border BorderBrush="Gainsboro" BorderThickness="2">
                    <wpf:PositionCircle x:Name="TimingCircle" Width="Auto" Height="339" MinHeight="300"
                                        Background="Black"
                                        PositionCircleInformationProvider="{Binding SessionTiming}" />
                </Border>
            </Grid>
            <Grid Column="2">
                <Border BorderBrush="Gainsboro" BorderThickness="2">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <GroupBox Grid.Row="0" Width="240" Height="107" Foreground="{StaticResource LightGrey01Brush}"
                                  Header="Session Settings">
                            <Grid Margin="0" VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.5*" />
                                    <ColumnDefinition Width="0.5*" />
                                </Grid.ColumnDefinitions>
                                <CheckBox x:Name="ChkScrollToPlayer" Width="100" Margin="10,64,0,-3" HorizontalAlignment="Left"
                                          VerticalAlignment="Top" Content="Scroll To Player" Foreground="{StaticResource LightGrey01Brush}"
                                          IsChecked="{Binding DisplaySettings.ScrollToPlayer}" />
                                <Label Width="74" Height="29" Margin="10,5,0,0" HorizontalAlignment="Left"
                                       VerticalAlignment="Top" Content="Order:" Foreground="{StaticResource LightGrey01Brush}" />
                                <ComboBox Grid.Column="0" Margin="10,34,10,0" VerticalAlignment="Top"
                                          ItemsSource="{Binding Source={StaticResource DataFromDisplayModeEnum}}"
                                          SelectedItem="{Binding CurrentSessionOptions.OrderingMode}" />
                                <Label Grid.Column="1" Width="74" Height="29" Margin="10,5,0,0"
                                       HorizontalAlignment="Left" VerticalAlignment="Top" Content="Times:" Foreground="{StaticResource LightGrey01Brush}" />
                                <ComboBox Grid.Column="1" Margin="10,34,10,0" VerticalAlignment="Top"
                                          ItemsSource="{Binding Source={StaticResource DataFromDisplayModeEnum}}"
                                          SelectedItem="{Binding CurrentSessionOptions.TimesDisplayMode}" />
                            </Grid>
                        </GroupBox>
                        <Grid Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>

                            <Button Grid.Row="0" Width="102" Height="55"
                                    Command="{Binding OpenSettingsCommand}" Style="{StaticResource StandardButton}"
                                    Content="Configure" />
                            <Button x:Name="BtnReset" Grid.Column="1" Width="117" Height="55" Style="{StaticResource StandardButton}"
                                    Command="{Binding ResetCommand}"
                                    Content="Reset Timing" />
                        </Grid>
                    </Grid>
                </Border>

            </Grid>
        </Grid>
        <Grid Row="3">
            <Border BorderThickness="1">
                <StatusBar x:Name="StatusBar" Height="21" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                           Panel.ZIndex="5">
                    <StatusBar.ItemsPanel>
                        <ItemsPanelTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="100" />
                                </Grid.ColumnDefinitions>
                            </Grid>
                        </ItemsPanelTemplate>
                    </StatusBar.ItemsPanel>
                    <StatusBarItem>
                        <TextBlock Name="ConnectionStatus" Text="{Binding ConnectedSource, UpdateSourceTrigger=PropertyChanged}" />
                    </StatusBarItem>
                    <Separator Grid.Column="1" />
                    <StatusBarItem Grid.Column="2">
                        <TextBlock Name="SessionTime" Text="{Binding SessionTime, UpdateSourceTrigger=PropertyChanged}" />
                    </StatusBarItem>
                    <Separator Grid.Column="3" />
                    <StatusBarItem Grid.Column="4" VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                        <ProgressBar Name="RaceProgrees" Height="10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                     Maximum="1000" Minimum="0"
                                     Value="{Binding SessionCompletedPercentage, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />
                    </StatusBarItem>
                    <Separator Grid.Column="5" />
                    <StatusBarItem Grid.Column="6">
                        <TextBlock Name="SystemTime" Text="{Binding SystemTime, UpdateSourceTrigger=PropertyChanged}" />
                    </StatusBarItem>
                </StatusBar>
            </Border>
        </Grid>
    </Grid>
</Window>
